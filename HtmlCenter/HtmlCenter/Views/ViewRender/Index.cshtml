@{
    Layout = null;
    string renderController = ViewBag.RenderController;
    string renderAction = ViewBag.RenderAction;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>百合天地</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/image-cover-frame.css" />
    <link rel="stylesheet" href="~/css/dynamic-form.css" />

    @*<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />*@

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/vue@3.2.45/dist/vue.global.prod.js" type="text/javascript"></script>
    <script src="~/lib/Sortable/Sortable.min.js" asp-append-version="true"></script>
    <script src="~/lib/vue/vuedraggable.umd.min.js" asp-append-version="true"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/vue-mixin.js" asp-append-version="true"></script>
</head>

<body id="app">
    <script>
        var thisApp;
        var component;
        const baseMixin = {
            data() {
                return {
                    Layout: {
                        headTitle: document.getElementsByTagName("title")[0].innerHTML,
                    },
                    dbAssembly: {
                        ready: false,
                    },
                }
            },
            beforeCreate() {
                thisApp = this
            },
            created() {
                thisApp.setHeadTitle(thisApp.pageTitle)
            },
            computed: {
            },
            methods: {
                firestoreInit: function () {
                    return new Promise((resolve, reject) => {
                        import("/js/firestore.js?v=1.0.04")
                            .then(module => {
                                thisApp.dbAssembly = module.dbAssembly;
                                resolve(true);
                            })
                    });
                },
                getDbAssembly: async function () {
                    let { ready } = thisApp.dbAssembly;

                    if (!ready) { await thisApp.firestoreInit(); }
                    return thisApp.dbAssembly;
                },
                dbInsert: async function (collectionName, data, docId = null) {
                    let { addDoc, setDoc, doc, collection, db } = await thisApp.getDbAssembly();
                    if (docId != null) { return await setDoc(doc(db, collectionName, docId), data); }
                    else { return await addDoc(collection(db, collectionName), data); }
                    
                },
                dbUpdate: async function (collectionName, docId, data) {
                    let { doc, updateDoc, db } = await thisApp.getDbAssembly();
                    const docRef = doc(db, collectionName, docId);
                    return await updateDoc(docRef, data);
                },
                dbQuery: async function (collectionName, docId = null) {
                    let { db, doc, getDoc, getDocs, collection } = await thisApp.getDbAssembly();
                    if (docId != null) { return await getDoc(doc(db, collectionName, docId)); }
                    else { return await getDocs(collection(db, collectionName)); }
                },
                dbQueryByWhere: async function (collectionName, condition) {
                    let { db, collection, query, where, getDocs } = await thisApp.getDbAssembly();
                    const q = query(collection(db, collectionName), condition);
                    return await getDocs(q);
                },
                dbDeleteDoc: async function (collectionName, docId) {
                    let { db, doc, deleteDoc } = await thisApp.getDbAssembly();
                    return await deleteDoc(doc(db, collectionName, docId));
                },
                signIn: async function () {
                    let { googleSignIn } = await thisApp.getDbAssembly();
                    return await googleSignIn();
                },
                signInWithEmail: async function (email, password) {
                    let { emailSignIn } = await thisApp.getDbAssembly();
                    return await emailSignIn(email, password);
                },
                getImage: async function (path) {
                    let { getImage } = await thisApp.getDbAssembly();
                    return await getImage(path);
                },
                deleteImage: async function (fileName) {
                    let { deleteImage } = await thisApp.getDbAssembly();
                    return await deleteImage(fileName);
                },
                uploadImage: async function (imageFile, fileName) {
                    let { uploadImage } = await thisApp.getDbAssembly();
                    return await uploadImage(imageFile, fileName);
                },
                newGuid: function () {
                    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
                        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
                    );
                },
                setHeadTitle(title) {
                    if (!title) { return; }
                    document.getElementsByTagName("title")[0].innerHTML = thisApp.Layout.headTitle + ' - ' + title;
                },

            },
        }
    </script>

    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3 px-5 nav-shadow navbar-animation">
            <div class="container-fluid">
                <a class="navbar-brand fw-bold fs-3 logo-text" href="/">百合天地</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" asp-controller="manga" asp-action="Index">百合漫畫區</a>
                        </li>
                        @*<li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" asp-controller="dynamicform" asp-action="Index">完結百合漫畫區</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" asp-controller="interest" asp-action="Index">不香百合</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" asp-controller="unitywebgl" asp-action="Index">百合動畫區</a>
                        </li>
                        <li class="nav-item me-3 px-2">
                            <a class="nav-link text-dark" asp-controller="aboutme" asp-action="Index">相關連結推薦</a>
                        </li>*@
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container header-margin">
        <main role="main" class="pb-3">
            <div class="background-video pc-limit">
                <img src="/image/bg.jpg" style=" opacity: 0.8; width: 100vw; height:auto" />
            </div>

            <div class="background-video mobile-limit">
                <img src="/image/bg.jpg" style=" opacity: 0.8; width: 100vw; height:auto" />
            </div>
            <partial name="~/Views/@(renderController)/@(renderAction).cshtml" />
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - Github - <a asp-controller="Home" asp-action="UpdateRenderView" style="color: #6c757d">更新</a>
        </div>
    </footer>

    <script>
        var vApp = formComponent.mount('#app')
    </script>



</body>
</html>
